/**
@page content_tags_alias content tags alias

Usage:
@verbatim @content_tag{TAG_NAME} brief description @endverbatim

This custom command provides a common interface to document content definition
tags.

@section alias_content_tags_example Examples

Some example code fragments:

C++ :
Any c style comment that supports Doxygen special commands

@verbatim // File: Sample1.h
/** @content_tag{CTRL_SAMPLE1} Sample 1 **/
int SomeFunction(std::string tag = "CTRL_SAMPLE1");
@endverbatim

FOCS :
Use the special c style form of triple slashes ///

@verbatim // File: Sample2.focs.txt
EffectsGroup
    scope = And [
        Ship
        /// @content_tag{CTRL_SAMPLE2} Sample 2
        Not HasTag name = "CTRL_SAMPLE2"
        WithinDistance distance = Source.Size condition = Source
    ]
    effects = ...
@endverbatim

Python :
With Python, docstring comments do not support special commands, instead use the hash form #

@verbatim # File: Sample3.py
def AnotherFunc(some_object):
    # @content_tag{CTRL_SAMPLE3} Sample 3
    if universe.getObject(some_object).hasTag("CTRL_SAMPLE3"):
        do_work
@endverbatim

@subsection alias_content_tags_duplicate_entries C++ : Duplicate entries

Within any single scope, after the first use of this alias, any additional
uses will show a duplicated entry.\n
To work around this bug, define those tags in variables and reference them
where needed.

The following results in duplicate entries for CTRL_SAMPLE4b.
@verbatim # File: Sample4.cpp
void FuncThree(Object obj) {
    /** @content_tag{CTRL_SAMPLE4a} Sample 4a **/
    if (obj.HasTag("CTRL_SAMPLE4a"))
        DoHardWork();
    /** @content_tag{CTRL_SAMPLE4b} Sample 4b **/
    else if (obj.HasTag("CTRL_SAMPLE4b"))
        DoLessWork();
}
@endverbatim

Instead, define a const and document that variable:
@verbatim # File: Sample4.cpp
/** @content_tag{CTRL_SAMPLE4a} Sample 4a **/
const std::string TAG_SAMPLE_4A = "CTRL_SAMPLE4a";
/** @content_tag{CTRL_SAMPLE4b} Sample 4b **/
const std::string TAG_SAMPLE_4B = "CTRL_SAMPLE4b";
void FuncThree(Object obj) {
    if (obj.HasTag(TAG_SAMPLE_4A))
        DoHardWork();
    else if (obj.HasTag(TAG_SAMPLE_4B))
        DoLessWork();
}
@endverbatim

**/
